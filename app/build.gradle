plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'jacoco'

    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id 'org.jetbrains.kotlin.android'

    id 'kotlin-android'
    id "kotlin-kapt"
    id "dagger.hilt.android.plugin"
}

android {
    namespace 'com.studhub.app'
    compileSdk 33

    defaultConfig {
        applicationId 'com.studhub.app'
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.studhub.app.StudHubTestRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            testCoverageEnabled true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
        compose true
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
        exclude("META-INF/LICENSE.md")
        exclude("META-INF/LICENSE-notice.md")
    }

    android {
        testOptions {
            unitTests {
                includeAndroidResources = true
                returnDefaultValues = true
            }
        }
    }


}

dependencies {
    androidTestImplementation"com.google.truth:truth:1.1.3"
    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4'
    androidTestImplementation 'com.squareup.okhttp3:mockwebserver:4.9.3'
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.6.1"
    androidTestImplementation "androidx.arch.core:core-testing:2.2.0"
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    implementation "com.google.maps.android:maps-compose:2.2.0"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.activity:activity-compose:1.7.1'
    implementation "androidx.compose.ui:ui:$compose_ui_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_ui_version"
    implementation "androidx.compose.material3:material3:$m3_version"
    implementation "androidx.compose.material:material-icons-core:$m2_version"
    // implementation "androidx.navigation:navigation-compose:2.6.0-alpha07"
    implementation 'androidx.navigation:navigation-testing:2.5.3'
    implementation 'androidx.compose.material:material:1.4.3'
    androidTestImplementation "io.mockk:mockk:1.12.0"
    androidTestImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test:rules:1.5.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.5.1'
    androidTestImplementation 'org.mockito:mockito-android:3.12.4'
    androidTestImplementation "org.mockito:mockito-core:3.12.4"

    //Navigation Compose
    implementation "androidx.hilt:hilt-navigation-compose:$hilt_navigation_compose_version"
    //Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    // Hilt Android testing dependencies
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"

    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:31.2.2')


    // When using the BoM, don't specify versions in Firebase dependencies
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-database-ktx'
    implementation 'com.google.firebase:firebase-storage-ktx'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_ui_version"
    androidTestImplementation "androidx.compose.ui:ui-test:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_ui_version"

    implementation 'com.google.android.gms:play-services-auth:20.5.0'

}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {
    reports {
        xml.required = true
        html.required = true
    }

    def fileFilter = [
            '**/R.class',
            '**/R$*.class',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*Test*.*',
            'android/**/*.*',
            '**/com/android/**',
            '**/androidx/**',
            '**/org/jetbrains/**',
            '**/kotlin/**',
            '**/META-INF/**',
            // Wrapper activities
            '**/wrapper/**',
            // HILT
            '**/di/**.*',
            '**/*Hilt*.*',
            'hilt_aggregated_deps/**',
            '**/*_Factory.class',
            '**/*_MembersInjector.class',
            '**/*Injector*.*',
            '**/*Module*.*',
            '**/*Component*.*',
            '**/*Dagger*.*',
            '**/*$Lambda*.*',
            '**/*$Companion*.*',
            '**/*$*_Factory*.*',
            '**/*_Provide*Factory*.*',
            '**Dagger**',
            '**Hilt**',
    ]
    def debugTree = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories.setFrom(files([mainSrc]))
    classDirectories.setFrom(files([debugTree]))
    executionData.setFrom(fileTree(dir: project.buildDir, includes: [
            'outputs/unit_test_code_coverage/debugUnitTest/testDebugUnitTest.exec',
            'outputs/code_coverage/debugAndroidTest/connected/*/coverage.ec'
    ]))
}

connectedCheck {
    finalizedBy jacocoTestReport
}
